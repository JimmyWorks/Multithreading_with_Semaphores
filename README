   Exploring Multiple Threads and Semaphores

   Author: Jimmy Nguyen
   Email:  Jimmy@JimmyWorks.net

   Description:
   Using multiple threads, simulate a hotel operation with each
   individual operating as a separate thread.  Individuals include:

   - 2 Front Desk Employees
   - 2 Bellhops
   - 25 Customers Checking In

   Semaphores and Queues are used for mutual exclusion and ordered
   execution of events.  The program starts up and begins creating
   customers and employees.  As customers line up and when front
   desk employees are available, they service the customers in the
   order they lined up.  Keys to unique rooms are given to the 
   customer served by that employee.  Customers also line up with
   a random (0-5) number of bags.  Customers with two or more bags
   will check their bags with the bellhop which will deliver it to
   the rooms after the customer has entered their rooms.  Customers
   that have checked their bags will also tip the bellhop before he
   returns to the the bellhop desk.

# Files ###############################################

 > README               < this readme file >

 > bin/                 < executable directory >
  > program.exe         < available after "make" >

 > include/             < include directory >
  > program.h           < program header file >

 > src/
  > main.cc		< main src code >
  > Makefile 		< Makefile >
  > bellhop.cc		< bellhop routine src >
  > customer.cc		< customer routine src >
  > frontdesk.cc	< front desk routine src >

# Program Execution Instructions ######################

Quick Guide:
  1. Navigate to src directory
  2. Run "make test".  This will make the executable
     and run the program.

Make commands:
  make		make executable
  make clean	clean dependency files
  make test	make and run the program
